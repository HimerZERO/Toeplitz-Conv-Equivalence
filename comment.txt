В проекте не показалось как конкретно оптимизировать время умножения матрицы на вектор. Так же на презентации проектов дали советы куда можно двигаться, а именно:
- Рассчитать сколько матриц тёплица нужно чтобы достаточно похоже заменить полносвязанный слой. По этой части были идеи смотреть похожесть в виде нормы разницы или по похожести получаемых векторов после умножения.
- Применить полученные выше результаты чтобы заменить полносвязанный слой не на одну матрицу тёплица (что явно уменьшает потенциал сети),а не несколько. Заменив матрицу на констентное число Тёплицевых память и скорость не должны быть больше по сравнению с полносвязанными слоями, при этом результаты должны быть заметно лучше.

Пока что нет возможности реализовать это в проекте, но после сессии займусь этим
